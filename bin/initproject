#!/bin/bash

# Name selection
while [[ -z $name ]] ; do
    read -e -p "Enter a name: " name
done

[[ -e "$name" ]] && echo "File or directory '$name' already exists." && exit 1


# Language selection
LANGUAGES=(
    Python
    C
    CPP
)

declare -A EXTENSIONS=(
    ["Python"]="py"
    ["C"]="c"
    ["CPP"]="cc"
)


language=$(selector "Enter a language:" ${LANGUAGES[*]})


# Git option
[[ "$(read -e -p 'Init a git repository? [Y/n]: '; echo $REPLY)" == [Nn]* ]] || has_git='true'


# License selection
[[ -z $SHARE ]] && SHARE="$HOME/.local/share/"  # If none supplied, use default
SHARE=$(realpath $SHARE)
if [[ -d "$SHARE/HB/licenses" ]] ; then
    LICENSES=`for entry in $SHARE/HB/licenses/*; do echo ${entry##*/}; done`
    LICENSES+=("None")
    license=$(selector "Select a license:" ${LICENSES[*]})
else
    echo "License folder not found."
fi


# Confirmation
echo
echo "Name: $name"
echo "Language: $language"
echo -n "Git: "; [[ -n "$has_git" ]] && echo "Yes"  || echo "No"
echo "License: $license"
[[ "$(read -e -p 'Create project? [Y/n]: '; echo $REPLY)" == [Nn]* ]] && echo "Aborting..." && exit 0


# Create it!
echo
mkdir $name && cd $name
[[ -n "$has_git" ]] && git init && cp $SHARE/HB/gitignore/$language ".gitignore"
touch README.md
[[ "None" == "$license" ]] || cp $SHARE/HB/licenses/$license LICENSE
mkdir src && cd src

cp $SHARE/HB/mainfiles/$language "$name.${EXTENSIONS[$language]}"

cd ..

if [ "C" = $language ]; then
    mkdir include
    makefile="\
CC     = gcc
INCLUDE= include
SOURCE = \$(wildcard src/*.c)
OBJS   = \$(SOURCE:src/%%.c=build/%%.o)
C_FLAGS= -c -Wall -Werror -Wunused -g -I\$(INCLUDE)
L_FLAS =
TARGET = $name


.DEFAULT: all

.PHONY: all
all: \$(TARGET)


\$(TARGET): \$(OBJS)
\t\$(CC) \$(L_FLAGS) -o \$@ \$^


build:
\t@mkdir -p build


build/%%.o: src/%%.c | build
\t\$(CC) \$(C_FLAGS) \$< -o \$@


.PHONY: clean
clean:
\t\$(RM) \$(TARGET)
\t\$(RM) \$(OBJS)"
printf "$makefile" > Makefile
fi
